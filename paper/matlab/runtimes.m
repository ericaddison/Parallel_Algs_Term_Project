data = [2, 27.8949737549, 31, 22, 25, 1396247, 125.728, 1581971, 74.464
3, 27.1797180176, 41, 26, 24, 1395515, 129.248, 1575106, 90.56
4, 30.0407409668, 92, 35, 24, 1380303, 131.808, 1513431, 75.808
5, 33.1401824951, 261, 41, 27, 1392563, 129.952, 1563759, 92.256
6, 30.9944152832, 805, 76, 42, 1451023, 145.952, 1578520, 138.336
7, 37.9085540771, 2741, 143, 75, 1458882, 143.424, 1580342, 142.08
8, 48.8758087158, 9848, 265, 106, 1403534, 140, 1562159, 141.888
9, 69.8566436768, 36668, 535, 225, 1395349, 144.064, 1665663, 197.376
10, 108.003616333, 140984, 1139, 461, 1461992, 158.08, 1562450, 137.76
11, 203.132629395, 552648, 2322, 972, 1457860, 182.624, 1576296, 132.64
12, 380.992889404, 2189043, 4948, 2109, 1462249, 206.752, 1584118, 85.248
13, 770.092010498, 8666948, 10463, 4510, 1456055, 226.304, 1582924, 92.416
14, 1514.91165161, 34612896, 22117, 9609, 1453712, 308.512, 1583858, 93.216
15, 2879.85801697, 137832341, 46570, 20442, 1382492, 401.504, 1580282, 95.776
16, 6013.87023926, 552784077, 96902, 43537, 1398466, 553.504, 1568065, 117.856
17, 14300.1079559, 2202105768, 204136, 91967, 1457433, 1091.33, 1567517, 171.808
18, 30861.8545532, 0, 424327, 194031, 1458471, 2232.67, 1571311, 266.176
19, 62604.1889191, 0, 894699, 414802, 1416542, 4601.15, 1637133, 458.304
20, 137033.939362, 0, 1861740, 907592, 1468796, 9639.42, 1589031, 840.448
21, 282436.847687, 0, 3868780, 1977817, 1437522, 20237.9, 1590814, 1576.83
22, 607935.905457, 0, 8049270, 4065588, 1548629, 42397.5, 1608967, 3299.94
23, 1235697.03102, 0, 16734237, 8505917, 1638904, 88885.3, 1666147, 7930.46
24, 2733231.06766, 0, 35041791, 17702861, 1852354, 191612, 1732046, 15913
25, 6005256.89125, 0, 72686336, 36956873, 2115653, 423191, 1899486, 31727.9
26, 12703373.909, 0, 149898703, 76173034, 3196619, 901684, 2245016, 64505.5]

n = data(:,1);
numpy = data(:,2);
dft = data(1:16,3);
fft_rec = data(:,4);
fft_iter = data(:,5);
fft_cuda = data(:,6);
fft_cuda_inner = data(:,7);
fft_cufft = data(:,8);
fft_cufft_inner = data(:,9);

close all
plot(n,log10(numpy),'-s','MarkerSize',2,'LineWidth',2)
hold on
plot(n(1:16),log10(dft),'-sr','MarkerSize',2,'LineWidth',2)
plot(n,log10(fft_rec),'-sg','MarkerSize',2,'LineWidth',2)
plot(n,log10(fft_iter),'-sk','MarkerSize',2,'LineWidth',2)
l = legend('numpy','dft', 'recursive','iterative')
set(l,...
    'Position',[0.158691406250001 0.717122395833334 0.2119140625 0.174153645833333]);

title('Runtimes for sequential FFT implementations')
ylabel('Time (log_{10}(seconds))')
xlabel('Array Size (log_2(n))')
set(gca,'ygrid','on','GridLineStyle','-')
set(gcf, 'PaperUnits', 'points');
set(gcf, 'PaperPosition', [100, 100, 500, 250]);
saveas(gcf,['./seqRuntimes'],'epsc');


figure
plot(n,log10(numpy),'-s','MarkerSize',2,'LineWidth',2)
hold on
plot(n,log10(fft_cuda),'-sr','MarkerSize',2,'LineWidth',2)
plot(n,log10(fft_cuda_inner),'-sg','MarkerSize',2,'LineWidth',2)
plot(n,log10(fft_cufft),'-sk','MarkerSize',2,'LineWidth',2)
plot(n,log10(fft_cufft_inner),'-sm','MarkerSize',2,'LineWidth',2)
l = legend('numpy','Cuda', 'Cuda-inner','CUFFT', 'CUFFT-inner')
set(l,...
    'Position',[0.199707031250001 0.423828125 0.2353515625 0.21484375]);
title('Runtimes for cuda FFT implementations')
ylabel('Time (log_{10}(seconds))')
xlabel('Array Size (log_2(n))')
set(gca,'ygrid','on','GridLineStyle','-')
set(gcf, 'PaperUnits', 'points');
set(gcf, 'PaperPosition', [100, 100, 500, 250]);
saveas(gcf,['./cudaRuntimes'],'epsc');
